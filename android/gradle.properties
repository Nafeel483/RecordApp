# Project-wide Gradle settings.

# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.

# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Default value: -Xmx512m -XX:MaxMetaspaceSize=256m

org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m
# org.gradle.jvmargs=-Xmx4608m

# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true

# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true
# Automatically convert third-party libraries to use AndroidX
android.enableJetifier=true

# Version of flipper SDK to use with React Native
FLIPPER_VERSION=0.125.0

multiDexEnabled=true
# Use this property to specify which architecture you want to build.
# You can also override it from the CLI using
# ./gradlew <task> -PreactNativeArchitectures=x86_64
reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64

# Use this property to enable support to the new architecture.
# This will allow you to use TurboModules and the Fabric render in
# your application. You should enable this flag either if you want
# to write custom TurboModules/Fabric components OR use libraries that
# are providing them.
newArchEnabled=false

MYAPP_UPLOAD_STORE_FILE=my-release-key.keystore
MYAPP_UPLOAD_STORE_PASSWORD=isaac1313
MYAPP_UPLOAD_KEY_ALIAS=my-release-key
MYAPP_UPLOAD_KEY_PASSWORD=isaac1313




# storeFile file('my-release-key.keystore')
#             storePassword 'isaac1313'
#             keyAlias 'my-release-key'
#             keyPassword 'isaac1313'

#  Generate the Release KeyStore File  and Command is Following


# 1----> cd android 
# 2----> cd app

# keytool -genkeypair -alias listener -keyalg RSA -keysize 2048 -validity 9125 -keystore keystore.jks
# keytool -genkeypair -v -keystore listener.keystore -alias listener -keyalg RSA -keysize 2048 -validity 10000
# 3----> keytool -genkey -v -keystore listener.keystore -alias listener -keyalg RSA -keysize 2048 -validity 10000
# 4----> cd ..
# 5----> cd ..
# 6----> keytool -list -v -keystore ./android/app/listener.keystore -alias listener -storepass isaac1313 -keypass isaac1313


# Then ExportCerticate Hash Android

# 
# ( keytool -export -rfc -keystore listener.keystore -alias listener -file upload_certificate.pem  ) ===> MOst Important 


# keytool -exportcert -alias listener -keystore listener.keystore | openssl sha1 -binary | openssl base64


# PEPK TOOL
# java -jar pepk.jar --keystore=listener.keystore --alias=listener --output=output.zip --include-cert --encryptionkey=eb10fe8f7c7c9df715022017b00c6471f8ba8170b13049a11e6c09ffe3056a104a3bbe4ac5a955f4ba4fe93fc8cef27558a3eb9d2a529a2092761fb833b656cd48b9de6a



# Other Commands

# ./gradlew bundlerelease   ( Release Bundle for Google Play Console )
# ./gradlew assemblerelease ( Release Apk for Local Testing )
# ./gradlew clean      ( Clean All Gradle caches and Previous File )